plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(22))
    }
}

repositories {
    mavenCentral()
}


dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}


tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("--enable-preview")
    options.compilerArgs.add("-Xlint:preview")
}

tasks.register('lineAgentJar', Jar) {
    archiveBaseName = 'line-coverage-agent'
    archiveClassifier = 'agent'

    from sourceSets.main.output

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes(
                'Premain-Class': 'org.instrumentation.agent.LineAgent',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true'
        )
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}


tasks.register('branchAgentJar', Jar) {
    archiveBaseName = 'branch-coverage-agent'
    archiveClassifier = 'agent'

    from sourceSets.main.output

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes(
                'Premain-Class': 'org.instrumentation.agent.BranchAgent',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true'
        )
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}


test {
    useJUnitPlatform()
}
