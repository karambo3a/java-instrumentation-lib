plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'


java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(22))
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation project(':instrumentation')
}

test {
    useJUnitPlatform()
    doFirst {
        def agentJar = project(':instrumentation').tasks.agentJar.outputs.files.singleFile
        jvmArgs += [
                '-javaagent:' + agentJar + '=isUnique=true,org/example/Example|org/example/Example2,branch,line,constant,indices',
                '--enable-preview'
        ]
    }
}

tasks.register('runWithAgents', JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    setMainClass("org.example.Example")

    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        def agentJar = project(':instrumentation').tasks.agentJar.outputs.files.singleFile
        jvmArgs += [
                '-javaagent:' + agentJar + '=isUnique=true,org\\/example\\/[^\\/]+,branch,line,constant,indices',
                '--enable-preview'
        ]
    }
}

tasks.register('runWithLineAgent', JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    setMainClass("org.example.Example")

    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        def agentJar = project(':instrumentation').tasks.agentJar.outputs.files.singleFile
        jvmArgs += [
                '-javaagent:' + agentJar + '=isUnique=true,org\\/example\\/[^\\/]+,line',
                '--enable-preview'
        ]
    }
}

tasks.register('runWithBranchAgent', JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    setMainClass("org.example.Example")

    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        def agentJar = project(':instrumentation').tasks.agentJar.outputs.files.singleFile
        jvmArgs += [
                '-javaagent:' + agentJar + '=isUnique=true,org\\/example\\/[^\\/]+,branch',
                '--enable-preview'
        ]
    }
}

tasks.register('runWithConstantAgent', JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    setMainClass("org.example.Example")

    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        def agentJar = project(':instrumentation').tasks.agentJar.outputs.files.singleFile
        jvmArgs += [
                '-javaagent:' + agentJar + '=isUnique=true,org\\/example\\/[^\\/]+,constant',
                '--enable-preview'
        ]
    }
}

tasks.register('runWithIndicesAgent', JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    setMainClass("org.example.Example")

    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        def agentJar = project(':instrumentation').tasks.agentJar.outputs.files.singleFile
        jvmArgs += [
                '-javaagent:' + agentJar + '=isUnique=true,org\\/example\\/[^\\/]+,indices',
                '--enable-preview'
        ]
    }
}