plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'


java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(22))
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation project(':instrumentation')
}

test {
    useJUnitPlatform()
}

// Define a custom task to run your application with a Java agent
tasks.register('runWithAgents', JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    // Set the main class
    setMainClass("org.example.Example")

    // Set the classpath
    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        // Get the agent JAR file from the other module's task
        def lineAgentJar = project(':instrumentation').tasks.lineAgentJar.outputs.files.singleFile
        def branchAgentJar = project(':instrumentation').tasks.branchAgentJar.outputs.files.singleFile
    }

    // Add the Java agent argument
    // Replace 'path/to/your/agent.jar' with the actual path to your Java agent JAR
    jvmArgs += [
            '-javaagent:/home/karambo3a/Desktop/study/instrumentation/example/instrumentation/build/libs/line-coverage-agent-1.0-SNAPSHOT-agent.jar',
            '-javaagent:/home/karambo3a/Desktop/study/instrumentation/example/instrumentation/build/libs/branch-coverage-agent-1.0-SNAPSHOT-agent.jar',
            '--enable-preview'
    ]
}

// Define a custom task to run your application with a Java agent
tasks.register('runWithLineAgent', JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    setMainClass("org.example.Example")

    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        def lineAgentJar = project(':instrumentation').tasks.lineAgentJar.outputs.files.singleFile
    }

    jvmArgs += [
            '-javaagent:/home/karambo3a/Desktop/study/instrumentation/example/instrumentation/build/libs/line-coverage-agent-1.0-SNAPSHOT-agent.jar',
            '--enable-preview'
    ]
}

tasks.register('runWithBranchAgent', JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    setMainClass("org.example.Example")

    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        def branchAgentJar = project(':instrumentation').tasks.branchAgentJar.outputs.files.singleFile
    }

    jvmArgs += [
            '-javaagent:/home/karambo3a/Desktop/study/instrumentation/example/instrumentation/build/libs/branch-coverage-agent-1.0-SNAPSHOT-agent.jar',
            '--enable-preview'
    ]
}